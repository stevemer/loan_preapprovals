"""empty message

Revision ID: 1e7d00fcbff1
Revises: 
Create Date: 2022-01-30 19:05:42.355697

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1e7d00fcbff1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('application',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('status', sa.Enum('APPROVED', 'DECLINED', 'PENDING', name='applicationstatus'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_application_user_id'), 'application', ['user_id'], unique=False)
    op.create_table('applicant_info',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('application_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('credit_score', sa.Integer(), nullable=False),
    sa.Column('monthly_debt', sa.Float(), nullable=False),
    sa.Column('monthly_income', sa.Float(), nullable=False),
    sa.Column('bankruptcies', sa.Integer(), nullable=False),
    sa.Column('delinquencies', sa.Integer(), nullable=False),
    sa.Column('vehicle_value', sa.Float(), nullable=False),
    sa.Column('loan_amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['application.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('offer',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('application_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('apr', sa.Float(), nullable=False),
    sa.Column('monthly_payment', sa.Float(), nullable=False),
    sa.Column('term_length_months', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['application.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rejection',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('application_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('reason', sa.Enum('EXCESSIVE_BANKRUPTCIES', 'EXCESSIVE_DELINQUENCIES', 'EXCESSIVE_DEBT_TO_INCOME_RATIO', 'EXCESSIVE_LOAN_TO_VALUE_RATIO', 'INSUFFICIENT_CREDIT_SCORE', name='rejectionreason'), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['application.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('application_id', 'reason', name='_application_rejection_uc')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rejection')
    op.drop_table('offer')
    op.drop_table('applicant_info')
    op.drop_index(op.f('ix_application_user_id'), table_name='application')
    op.drop_table('application')
    op.drop_table('users')
    # ### end Alembic commands ###
